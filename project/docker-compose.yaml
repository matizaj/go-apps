version: '3'
services:
  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
      - ./db-data/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: "logs"
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "password"
    volumes:
      - ./db-data/mongo/:/data/db


  authentication-service:
    build:
      context: ../authentication-service
      dockerfile: ../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - postgres
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=postgres sslmode=disable timezone=UTC connect_timeout=5"

  broker-service:
    build:
      context: ../broker-service
      dockerfile: ../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    build:
      context: ../mail-service-test
      dockerfile: ../mail-service-test/mail-service.dockerfile
    restart: always
    ports:
      - "8085:80"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ../logger-service
      dockerfile: ../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"